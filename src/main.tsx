import { render } from 'solid-js/web'
import { RouterProvider, createRouter } from '@tanstack/solid-router'
import { QueryClientProvider } from '@tanstack/solid-query'
import { routeTree } from './routeTree.gen'
import './index.css'
import { queryClient } from '~/lib/query-client'

// Create the router instance using the file-based route tree generated by the plugin
const router = createRouter({
  routeTree,
  defaultPreload: 'intent',
  scrollRestoration: true,
})

// QueryClient is provided from a shared module so routes/components share cache

// Register the router type for full type-safety
declare module '@tanstack/solid-router' {
  interface Register {
    router: typeof router
  }
}

const rootElement = document.getElementById('root')!

if (!rootElement) {
  throw new Error('Root element with id "root" not found in index.html')
}

render(() => (
  <QueryClientProvider client={queryClient}>
    <RouterProvider router={router} />
  </QueryClientProvider>
), rootElement)
